{"ast":null,"code":"import _classCallCheck from \"/Users/stevenelbery/Desktop/Udacity/React/Demos/contacts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stevenelbery/Desktop/Udacity/React/Demos/contacts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stevenelbery/Desktop/Udacity/React/Demos/contacts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stevenelbery/Desktop/Udacity/React/Demos/contacts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stevenelbery/Desktop/Udacity/React/Demos/contacts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/stevenelbery/Desktop/Udacity/React/Demos/contacts/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport ListContacts from './ListContacts';\nimport CreateContact from './CreateContact';\nimport * as ContactsAPI from './utils/ContactsAPI';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      contacts: []\n    };\n\n    _this.removeContact = function (contact) {\n      _this.setState(function (state) {\n        return {\n          contacts: state.contacts.filter(function (c) {\n            return c.id !== contact.id;\n          })\n        };\n      });\n\n      ContactsAPI.remove(contact);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      ContactsAPI.getAll().then(function (contacts) {\n        _this2.setState({\n          contacts: contacts\n        });\n      });\n    }\n  }, {\n    key: \"createContact\",\n    value: function createContact(contact) {\n      var _this3 = this;\n\n      ContactsAPI.create(contact).then(function (contact) {\n        _this3.setState(function (state) {\n          return {\n            contacts: state.contacts.concat([contact])\n          };\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListContacts, {\n            onDeleteContact: _this4.removeContact,\n            contacts: _this4.state.contacts,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/create\",\n        render: function render(_ref) {\n          var history = _ref.history;\n          return React.createElement(CreateContact, {\n            onCreateContact: function onCreateContact(contact) {\n              _this4.createContact(contact);\n\n              history.push('/');\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/stevenelbery/Desktop/Udacity/React/Demos/contacts/src/App.js"],"names":["React","Component","Route","ListContacts","CreateContact","ContactsAPI","App","state","contacts","removeContact","contact","setState","filter","c","id","remove","getAll","then","create","concat","history","createContact","push"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,KAAKC,WAAZ,MAA6B,qBAA7B;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;UAQRC,a,GAAgB,UAACC,OAAD,EAAa;AAC3B,YAAKC,QAAL,CAAc,UAACJ,KAAD;AAAA,eAAY;AACxBC,UAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,CAAeI,MAAf,CAAsB,UAACC,CAAD;AAAA,mBAAOA,CAAC,CAACC,EAAF,KAASJ,OAAO,CAACI,EAAxB;AAAA,WAAtB;AADc,SAAZ;AAAA,OAAd;;AAIAT,MAAAA,WAAW,CAACU,MAAZ,CAAmBL,OAAnB;AACD,K;;;;;;;wCAXmB;AAAA;;AAClBL,MAAAA,WAAW,CAACW,MAAZ,GAAqBC,IAArB,CAA0B,UAACT,QAAD,EAAc;AACtC,QAAA,MAAI,CAACG,QAAL,CAAc;AAAEH,UAAAA,QAAQ,EAARA;AAAF,SAAd;AACD,OAFD;AAGD;;;kCASaE,O,EAAS;AAAA;;AACrBL,MAAAA,WAAW,CAACa,MAAZ,CAAmBR,OAAnB,EAA4BO,IAA5B,CAAiC,UAAAP,OAAO,EAAI;AAC1C,QAAA,MAAI,CAACC,QAAL,CAAc,UAAAJ,KAAK;AAAA,iBAAK;AACtBC,YAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,CAAeW,MAAf,CAAsB,CAAET,OAAF,CAAtB;AADY,WAAL;AAAA,SAAnB;AAGD,OAJD;AAKD;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,MAAM,EAAE;AAAA,iBAC5B,oBAAC,YAAD;AACE,YAAA,eAAe,EAAE,MAAI,CAACD,aADxB;AAEE,YAAA,QAAQ,EAAE,MAAI,CAACF,KAAL,CAAWC,QAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD4B;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,MAAM,EAAE;AAAA,cAAGY,OAAH,QAAGA,OAAH;AAAA,iBAC5B,oBAAC,aAAD;AACE,YAAA,eAAe,EAAE,yBAACV,OAAD,EAAa;AAC5B,cAAA,MAAI,CAACW,aAAL,CAAmBX,OAAnB;;AACAU,cAAAA,OAAO,CAACE,IAAR,CAAa,GAAb;AACD,aAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD4B;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF;AAkBD;;;;EA5CerB,S;;AA+ClB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom'\nimport ListContacts from './ListContacts'\nimport CreateContact from './CreateContact'\nimport * as ContactsAPI from './utils/ContactsAPI'\n\nclass App extends Component {\n  state = {\n    contacts: []\n  }\n  componentDidMount() {\n    ContactsAPI.getAll().then((contacts) => {\n      this.setState({ contacts })\n    })\n  }\n  removeContact = (contact) => {\n    this.setState((state) => ({\n      contacts: state.contacts.filter((c) => c.id !== contact.id)\n    }))\n\n    ContactsAPI.remove(contact)\n  }\n\n  createContact(contact) {\n    ContactsAPI.create(contact).then(contact => {\n      this.setState(state => ({\n        contacts: state.contacts.concat([ contact ])\n      }))\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Route exact path='/' render={() => (\n          <ListContacts\n            onDeleteContact={this.removeContact}\n            contacts={this.state.contacts}\n          />\n        )}/>\n        <Route path='/create' render={({ history }) => (\n          <CreateContact\n            onCreateContact={(contact) => {\n              this.createContact(contact)\n              history.push('/')\n            }}\n          />\n        )}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}